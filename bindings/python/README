1. Requirements

	For using cython you have to install the header files and a static library for Python
	
	E.g. using ubuntu:
	
		$ sudo apt-get install python-dev


2. To install Python binding on *nix, simply run below command:

		$ sudo make install

	For better performance, install Cython-based binding with:

		$ sudo make install_cython

	NOTE: to install Cython, depending on if you already have pip or
	easy_install installed, simply do either:

		$ sudo pip install cython
	or:
		$ sudo easy_install cython
		
	Depending on your distribution you might also install cython using your repository.
	E.g. using ubuntu:
	
		$ sudo apt-get install cython
		
	NOTE: Verify to use the current version
	
		& apt-cache policy cython
	
	Which should at least print version 0.19


This directory contains some test code to show how to use Capstone API.

- test.py
  This code shows the most simple form of API where we only want to get basic
  information out of disassembled instruction, such as address, mnemonic and
  operand string.

- test_detail.py:
  This code shows how to access to architecture-neutral information in disassembled
  instructions, such as implicit registers read/written, or groups of instructions
  that this instruction belong to.

- test_<arch>.py
  These code show how to access architecture-specific information for each
  architecture.


3. To install Python binding on Windows:

Recommended method:

	Use the Python module installer for 32/64 bit Windows from:

		http://www.capstone-engine.org/download.html


Manual method:

	If the module installer fails to locate your Python install, or if you have
	additional Python installs (e.g. Anaconda / virtualenv), run the following
	command in command prompt:

		C:\> C:\location_to_python\python.exe setup.py install

	Next, copy libcapstone.dll from the 'Core engine for Windows' package available
	on the same Capstone download page and paste it in the path:

		C:\location_to_python\Lib\site-packages\capstone\
